From: norm
Date: 13 May 1980 at 1644-PDT
To: day
fcc: e
Subject: Re: e on the Interactive Terminal
In-reply-to: Your message of 9 May 1980 at 1246-PDT.

I think I have all the information you asked for.

# define PUT putchar
mlt0  ()         { PUT(037); }
mrt0  ()         { PUT(036); }
mdn0  ()         { PUT(012); }
mup0  ()         { PUT(034); }
mcr0  ()         { PUT(015); }
mclr0 ()         { PUT(014); }
mhm0  ()         { PUT(032); }
mbsp0 ()         { PUT(010); }
maddr0(lin, col) { PUT(017); PUT(040 + lin); PUT(040 + col); }
mini0 ()         { PUT(026);PUT(072);PUT(026);PUT(064);PUT(026);PUT(045);}
mend0 ()         { PUT(026);PUT(071); }

Length of Screen line:   80 characters
Screen Height:           24 lines

Special Margin Characters:

left and right border character:  026,044,07
top and bottom border character:  026,044,03
right border extended character:  026,044,0123
left  border extended character:  026,044,0127
end of file border character:     026,044,047
The inactive window border character is a  '.' (dot),

Transmitting a <RETURN> to the terminal does not automatically generate
a line feed.  There is no automatic scrolling.  When the cursor moves
across left or right boundries it wraps on the same line.

In what follows {x} denotes the escape sequence: 026,x,015.

Keys marked as follows transmit the indicated data:
EXIT		{t}
UPARROW		034
DOWNARROW	012
RETURN		015
HOME		032
RIGHTARROW	036
LEFTARROW	037
TAB		011
BACKTAB		031
BACKSPACE	010
SR TAB		{N}
ENTER		{Y}    (plays the role of <COMMAND> )
LEFT		{W}
RIGHT		{X}
+LINE		{R}
-LINE		{U}
+PAGE		{Q}
-PAGE		{T}
+SRCH		{S}
-SRCH		{V}
OPEN		020
CLOSE		021
PUT		{L}
PICK		{K}
GOTO		{Z}
DELCH		022
USE		{D}
WIN		{F}
CH WIN		{G}
SAVE		{C}
DO		{H}
QUOT		{M}    (plays the role of <CONTROL FS> )
RESTORE         {P}    (plays the role of <COMMAND> <CLOSE> )
REFRESH		{E}

There are unmarked keys that transmit: {A},{B},{I},{J},{.},{2} and {u}.
The last of these keys is colored solid black.

There is a 2-position toggle switch marked INSM.  When this switch is on, a
light on the keyboard marked "Insert Mode" remains on.  If this switch is
on when the first key, after the initialization sequence is received, is
hit, then the code or escape sequence for that key is preceeded by
026,0176.  If this switch is off when the first key, after the
initialization sequence is received, is hit then nothing precedes the code
or escape sequence for that key.  Thereafter, the terminal transmits
026,0175 before the code or escape sequence for the first key hit after the
switch is turned off, and transmits 026,0176 before the code or escape
sequence for the first key hit after the switch is turned on.

What all this amounts to is that the sequence 026,0176 means "enter insert
mode" and that the escape sequence 026,0175 means "leave insert mode", the.
editor being initially in the non-insert mode state.  You can also regard
it as meaning that BOTH the escape sequence 026,0175 and the escape
sequence 026,0176 are toggles reversing the insert mode state.  If the
editor cannot handle this then one of the unused keys, (perhaps the black
key, the one with escape sequence 026,0365,0215) can be used as an insert
mode toggle key.

[Let me know if the above is not clear.]

The parity bit is often on, when transmitting to the vax.  I don't understand
exactly why, except that in raw mode, this sometimes happens with the 
ann arbor too.

The Interactive editor uses the following defaults:

Default +LINES:  7 lines
Default -LINES:  7 lines
Default Window left:  20 columns
Defualt Window right: 20 columns
