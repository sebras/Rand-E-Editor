From:
	Dave Yost
	Rand Corporation

To:
	Sarah Freeman
	Ann Arbor Terminals

Cc:
	Ed Zimmer
	Ann Arbor Terminals

Date:
	June 1, 1981


Dear Sarah:

    What follows is a list of problems  and  suggested  solutions
regarding  the  Ambassador  terminal.  To put my comments in some
perspective, let me say that I am extremely  impressed  with  the
product.  Functionally  it is a tour de force, and all this at an
unbelievably competitive price.  I was in the  terminal  business
myself,  in  both  hardware  and  software design, and I know the
amount of design, implementation, and documentation work involved
in a product like this.

    I am the person at Rand responsible for 'The Rand Editor',  a
screen-oriented  text editor program developed at Rand which runs
under the UNIX operating system on  PDP-11's  and  VAX's.  It  is
very   important   to  us  that  the  editor  fully  utilize  the
capabilities  of  the  Ambassador,  and  as   this   program   is
distributed fairly widely, I hope you can see that it is probably
important to you too--beyond the scope of the terminals you sell
to Rand.  It is important to note that the human-interface design
of the Rand Editor relies heavily on the use of function keys

    Here are the problems:

1.  The BACKSPACE key should be programmable.

        This is crucial, because we use the backspace key for a
        destructive backspace, and CTRL/H for a non-destructive
        backspace, and so we need the two keys to generate
        different codes.

2.  The SEND key should be programmable during simultaneous SRM.

        Why can't it be programmable ONLY for Simultaneous SRM,
        while having the normal effect in Monitor SRM?  Remember
        we have hundreds of your 4080 terminals, which have a
        keyboard layout similar to the Ambassador in that there
        are three keys above the function pad.  We would like to
        use those three keys for the same functions on both kinds
        of terminals, but can't because the SEND key is useless.
        Incidentally, for all of our applications, and for that
        matter all known UNIX applications, the entire portion of
        the terminal capabilities related to local operation and
        screen transmit are unused.  So, the SEND key is useless
	for us unless it is programmable in Simultaneous SRM.

3.  Provide a mechanism to query the terminal about its state.

        The host should be able to ask the terminal about any of
        ther terminal characteristics that can change, like the
        screen size, Mode Controls, tabstops, programmable keys,
        etc. so that a program can save the state of the terminal
	and restore it.

4.  There should be a single function to reset the keys to power-up state.

	This is especially important for the keys which function
	locally, like MOVE UP.

5.  A 3-character cursor address sequence should be implemented.

        Screen editors tend to do a lot of cursor addressing, and
        cursor addressing takes 2.6 times longer with the ASCII
        standard.  What is hurt by allowing an optional non-
        standard binary-encoded three-character sequence?  Why
        not make it something you have to explicitly enable with
	a private-use Mode Control parameter?

6.  All non-printing keys should be programmable.

	You have omitted BACKSPACE, DEL, LINE FEED, and ESCAPE.

7.  All programmable keys should have separate shift and non-shift codes.

	Notably EDIT, and the function pad keys.

8.  The Set Display Parameters command should not home the cursor.

        This is a misfeature.  There is a perfectly good command
        available to home the cursor if you want to.  I may be
        doing a ZSDP just to be sure the page or screen size is
        correct, and it is very bad for the cursor to move in
        this case.

The manual is an impressive piece of work, generally very thorough.
I have a few problems with it, however.

1.  Tell us more about which functions really do take longer than
        one character time at 19.2 KBaud to complete.  Even
        though you have an input buffer, I'm sure there are
        things one can do to overrun it, and I would rather be
        safe and provide the correct amount of padding, in cases
        where I can't use Auto XON/XOFF mode.

2.  I wish you would replace those funny quasi-hex numbers you
        use with ordinary hexidecimal, and anyway, whenever you
        are referring to a printing character, the character
        should be described by showing that character in quotes
	in addition to the hex or quasi-hex.
